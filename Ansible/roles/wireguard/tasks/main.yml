- name: Always install wireguard
  apt:
    name: ['wireguard']
    state: present

- set_fact:
    wireguard_peer_ip: "{{ lookup('env','WIREGUARD_PEER_IP') }}"
    wireguard_server_endpoint: "{{ lookup('env','WIREGUARD_SERVER_ENDPOINT') }}"
    wireguard_server_pubkey: "{{ lookup('env','WIREGUARD_SERVER_PUBKEY') }}"

- debug:
    msg: "WIREGUARD_PEER_IP = {{ wireguard_peer_ip }}"

- debug:
    msg: "WIREGUARD_SERVER_ENDPOINT = {{ wireguard_server_endpoint }}"

- debug:
    msg: "WIREGUARD_SERVER_PUBKEY = {{ wireguard_server_pubkey }}"

- set_fact:
    wireguard_install: "{{ not (wireguard_peer_ip == '' or wireguard_server_endpoint == '' or wireguard_server_pubkey == '') }}"

- debug:
    msg: "WIREGUARD_INSTALL = {{ wireguard_install }}"

- name: Register if wireguard private key already exists on target host
  ansible.builtin.stat:
    path: "{{ paths.wireguard_keyfile }}"
  register: wireguard_register_stat_keyfile
  when: wireguard_install

- name: Create vault directory if it does not exist
  ansible.builtin.file:
    path: "{{paths.rpi_vault}}"
    state: directory

- name: Generate wireguard private key
  ansible.builtin.shell: |
    touch {{paths.wireguard_keyfile}}
    chmod 400 {{paths.wireguard_keyfile}}
    wg genkey > {{paths.wireguard_keyfile}}
  args:
    executable: /bin/bash
  when: wireguard_install and not wireguard_register_stat_keyfile.stat.exists

- name: Derive wireguard public key
  ansible.builtin.shell: |
    wg pubkey < {{paths.wireguard_keyfile}} > {{paths.rpi_vault}}/wireguard_pubkey
  args:
    executable: /bin/bash
  when: wireguard_install

- name: Create wireguard user directory if it does not exist
  file:
    path: "{{paths.home}}/wireguard"
    state: directory
    owner: "{{username}}"
    group: "{{username}}"
    mode: '0751'
  when: wireguard_install

- name: Copy wireguard pubkey to user home folder
  copy:
    remote_src: True
    src: "{{paths.rpi_vault}}/wireguard_pubkey"
    dest: "{{paths.home}}/wireguard/pubkey.txt"
    owner: "{{username}}"
    group: "{{username}}"
  when: wireguard_install

- name: Copy wg0 file
  template:
    src: wg0.conf.tmpl
    dest: "/etc/wireguard/wg0.conf"
  when: wireguard_install

- name: Start and enable wireguard
  systemd:
    name: wg-quick@wg0
    state: restarted
    enabled: yes
    daemon_reload: yes
  when: wireguard_install

- name: Stop and disable wireguard
  systemd:
    name: wg-quick@wg0
    state: stopped
    enabled: no
    daemon_reload: yes
  when: not wireguard_install
